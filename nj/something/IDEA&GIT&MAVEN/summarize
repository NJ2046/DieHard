名词解释
IDEA:
Java虚拟机的一个集成开发环境。
Capable and ergonomic IDE for JVM.
GIT:
免费和开源的分布式版本管理系统。
Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.
MAVEN:
Maven是一个软件项目管理和理解的工具。
Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project's build, reporting and documentation from a central piece of information.


事情的起因
事情已经起因很多次了
但都险些没有解决或者比较耽误事情
今天有发生了一起
maven的私服里某一个包不能用了
于是登陆上Nexus Repository Manager上查看历史版本
最后使用了Version=1.0-20191106.041655-108的包
随后引用就可以使用了，程序也正常
事情过了很多天
今天我准备把服务打成jar包放在服务器上去跑一些东西
maven一直报错说找不到那个包
再胡乱修改一通后还是不行
胡乱修改包括重启idea了、换换名字了、删除删除了
最后还是不行
准备去吧那个maven私服上的包的版本倒退回来
后来又重启了一次或者又更换了maven的版本什么的
神奇的就又能打包成jar了
工作得以继续了
但是花费了2个小时
并且也没有找到问题和解答方法

学习和记录
What's Maven
Introduction
Maven, a [Yiddish word](https://en.wikipedia.org/wiki/Maven) meaning *accumulator of knowledge*, began as an attempt to simplify the build processes in the Jakarta Turbine project. There were several projects, each with their own Ant build files, that were all slightly different. JARs were checked into CVS. We wanted a standard way to build the projects, a clear definition of what the project consisted of, an easy way to publish project information and a way to share JARs across several projects.
The result is a tool that can now be used for building and managing any Java-based project. We hope that we have created something that will make the day-to-day work of Java developers easier and generally help with the comprehension of any Java-based project.
关键词
accumulator of knowledge
Ant
CVS
JARs
comprehension
理解
知识的积累，就像"不用重复造轮子"
Java代码可以包成Jar
为了分享Jars，Maven将项目之间的Jar串联起来
---------------------------------------------------
Maven’s Objectives
Making the build process easy
Providing a uniform build system
Providing quality project information
Providing guidelines for best practices development
Allowing transparent migration to new features
理解
创建项目过程的简单化
统一的创建系统
有质量的项目信息 不慎了解
开发最容易上手的指导规范 初步理解，不知道对不对
透明的迁移  更不了解
结论
以为自己看明白了前两个

Feature Summary
---------------------------------------------------
A large and growing repository of libraries and metadata to use out of the box, and arrangements in place with the largest Open Source projects for real-time availability of their latest releases

Extensible, with the ability to easily write plugins in Java or scripting languages

Model based builds: Maven is able to build any number of projects into predefined output types such as a JAR, WAR, or distribution based on metadata about the project, without the need to do any scripting in most cases

Coherent site of project information: Using the same metadata as for the build process, Maven is able to generate a web site or PDF including any documentation you care to add, and adds to that standard reports about the state of development of the project. Examples of this information can be seen at the bottom of the left-hand navigation of this site under the "Project Information" and "Project Reports" submenus

Release management and distribution publication: Without much additional configuration, Maven will integrate with your source control system (such as Subversion or Git) and manage the release of a project based on a certain tag. It can also publish this to a distribution location for use by other projects. Maven is able to publish individual outputs such as a JAR, an archive including other dependencies and documentation, or as a source distribution

Dependency management: Maven encourages the use of a central repository of JARs and other dependencies. Maven comes with a mechanism that your project's clients can use to download any JARs required for building your project from a central JAR repository much like Perl's CPAN. This allows users of Maven to reuse JARs across projects and encourages communication between projects to ensure that backward compatibility issues are dealt with.
关键词
large and growing repository
Extensible and plugins
a JAR, WAR, or distribution based on metadata
integrate with git
理解
一个大的开源的并且增长着的仓库，很多大型公司也在使用maven，比如google、alibaba
可以扩展的支持插件，比如spring boot的插件
基于模型的构建，这个好像很难理解，先记住了，后续再来体味它的用法
项目信息的连贯，不太知道，猜测类似是帮助文档，瞎猜的，感觉不慎重要
发行管理和分布式发布，无话
依赖管理
结论
挑选了一些自己没看懂的贴了出来，感觉能看懂的，大部分是在夸maven的方便使用。
自己感觉挑选的这些可能是有用的特性吧
还有其实刚开始看特性没什么太大的用处，只是混一个脸熟

-----------------------------------------------------------------------
Maven Users Centre->Installing Apache Maven
extracting the archive and adding the `bin` folder with the `mvn` command to the `PATH`.
结论
这种方法是通过网页下载版进行的，通常在服务器上使用的是安装服务的包，通常分为两个大的派系，yum和dpkg
这句话解释了安装的精髓，也就是把maven家目录里的bin目录添加到系统的PATH中
----------------------------------------------------------------------
Maven Users Centre->Running Apache Maven
讲诉了如何让maven项目跑起来
典型的命令：mvn package
最常最多使用的：mvn verify
插件形式：mvn archetype:generate
---------------------------------------------------------------------
Maven Users Centre->Configuring Apache Maven
介绍了maven的相关配置
setting.xml
.mvn
.mvn/extensions.xml
.mvn/maven.config
.mvn/jvm.config
---------------------------------------------------------------------
Maven Users Centre->Apache Maven IDE Integration
介绍了常用的IDE的关于maven的配置说明
---------------------------------------------------------------------
Providers of Apache Maven Support and Training
介绍了对maven的支持和培训相关的内容
没有支持maven的公司
有一些培训公司，还是蛮有趣，可以针对某一个小技术的培训，在国内好像没有
都是大面上的培训，针对某一个大型应用上的培训，比如达内、黑马等
----------------------------------------------------------------------
总结->About maven
到这里关于about maven看完了
主要介绍了什么是maven:为了分享Jars，Maven将项目之间的Jar串联起来
maven的特性:挺多的，现在知道有一个是可以用.md来写网页，归结于maven的某一个插件
如何下载maven:介绍的是网页版的下载方法，有图形界面的系统容易操作，好像除了服务器，开发机应该都是有图形界面的
基本的使用:下载、测试、运行、配置
历史版本:不再赘述
感觉最重要的是什么是maven，解释的水平还是挺高的，也就是为什么会存在以及存在的意义

第二章 DOCUMENTATION
Getting Started with Maven->Maven in 5 Minutes->Prerequisites
You must have an understanding of how to install software on your computer. If you do not know how to do this, please ask someone at your office, school, etc or pay someone to explain this to you. The Maven mailing lists are not the best place to ask for this advice.
把maven安装到你的电脑，使用你能想到的任何方法
Getting Started with Maven->Maven in 5 Minutes->Creating a Project
command
creating
mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false
build
mvn package
test
java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
总结
没有讲创建一个项目后那些参数都是些什么意思，就是想让你感受一下创建的过程吧
使用mvn package去构建这个项目，这一点就像gcc a.txt然后会生成一个a.out的可执行文件一样
测试就是使用相应的命令去执行后面那个可执行的命令java -cp的意思是从.jar文件里搜索某个class去执行
Getting Started with Maven->Maven in 5 Minutes->Running maven Tools
Maven Phases
validate: validate the project is correct and all necessary information is available
compile: compile the source code of the project
test: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
package: take the compiled code and package it in its distributable format, such as a JAR.
integration-test: process and deploy the package if necessary into an environment where integration tests can be run
verify: run any checks to verify the package is valid and meets quality criteria
install: install the package into the local repository, for use as a dependency in other projects locally
deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
clean: cleans up artifacts created by prior builds
site: generates site documentation for this project
An interesting thing to note is that phases and goals may be executed in sequence
关键词
phases
validate:correct,necessary information is available
package:distributable format JAR
verify:run valid and quality
install:other projects locally
deploy:sharing with other developers and projects
总结
它将这几个命令叫做phases，中文翻译过来是阶段，这个词的来源应该是编译原理过来的，分成阶段来介绍这些命令是极好的
还有一点能感觉到这几个phases并不是最原始的，感觉是根据需求而挑拣出来的，阶段是对于这几个命令本身来说的，和他们之间没什么阶段的关系
我是这么理解的，不知道对不对
工作中，我用package和install都可以生成jar并且用java -jar去执行他们，达到我想要的，启动某个程序服务
还有一点，就是这些phases可以在一个序列中一起执行，也就是
mvn clean
mvn package
可以写成
mvn clean package

总结 Getting Started with Maven->Maven in 5 Minutes
We hope this quick overview has piqued your interest in the versatility of Maven. Note that this is a very truncated quick-start guide. Now you are ready for more comprehensive details concerning the actions you have just performed
这个Conclusion就写的很好

