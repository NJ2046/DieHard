进程
所有现代计算机会在同一时间做许多事情。
一个进程是某种类型的活动，他有程序、输入、输出。
程序和进程的区别，程序是一个静态的抽象概念，进程是一种动态的抽象概念。

进程的状态
运行、就绪、阻塞。
可能的转换。
运行->阻塞
运行->就绪
阻塞->就绪
就绪->运行

多道程序的设计模型
这个应该是最重要的，两个指标，cpu的利用率和系统的吞吐量。

线程
存在的意义
在许多应用中同时发生着多种活动，其中某些活动随着时间推移会被阻塞。
通过将这些应用程序分解成可以准并行运行的多个顺序线程，程序设计模型会变得简单。
创建比进程消耗小，创建一个线程比创建进程要快10-1000倍。
性能，在大量计算和大量IO的时候，使用线程让他们重叠进行。

进程/线程通信
进程通信原语，信号量、管程和消息。
一个进程可以处于运行、就绪或者阻塞状态，当该进程或其它进程执行某个原语时，可以改变其状态。

进程/线程调度
只要有两个或者更多个进程/线程处于就绪状态，只有一个CPU可用，那么就要选择下一个要运行的进程。
在操作系统中，完成选择工作的这一部分成为调度程序。
这个也是重要的，但感觉不用这边去实现，操作系统来做这件事情。


存在的意义和使用的方法。
程序->进程->线程->通信->调度


以上摘阅来自《现代操作系统 第4版》