假设有这么一个类：
class ZeroEvenOdd {
  public ZeroEvenOdd(int n) { ... }      // 构造函数
  public void zero(printNumber) { ... }  // 仅打印出 0
  public void even(printNumber) { ... }  // 仅打印出 偶数
  public void odd(printNumber) { ... }   // 仅打印出 奇数
}
相同的一个 ZeroEvenOdd 类实例将会传递给三个不同的线程：

    线程 A 将调用 zero()，它只输出 0 。
    线程 B 将调用 even()，它只输出偶数。
    线程 C 将调用 odd()，它只输出奇数。

每个线程都有一个 printNumber 方法来输出一个整数。请修改给出的代码以输出整数序列 010203040506... ，其中序列的长度必须为 2n。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/print-zero-even-odd
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


分析
从题目上可知，已经设定好线程，以及各个线程要做的事情（功能）。
需要做的是控制线程做各自事情的顺序。
可以发现even和odd是依赖于zero的。
也就是zero的优先级比even和odd要高。
发现输出0的个数是n个，依次是odd、even。

本质是线程调度的问题，操作系统那边会有各式各样的调度算法，这边的调度是基于问题描述。

